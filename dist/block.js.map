{"version":3,"file":"./block.js","mappings":"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","sources":["webpack:///./src/style.scss","webpack:///webpack/bootstrap","webpack:///webpack/runtime/make namespace object","webpack:///./src/block.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './style.scss';\n\nconst { registerBlockType } = wp.blocks;\nconst { useState, useEffect, Fragment } = wp.element;\nconst { Spinner, Button, ComboboxControl, Notice } = wp.components;\n\nconst WeatherInfo = ({ location, temperature, description, humidity }) => (\n    <div className=\"weather-info panel\">\n        <h4>Today's Weather in {location}</h4>\n        <ul>\n            <li><strong>Temperature:</strong> {temperature}</li>\n            <li><strong>Condition:</strong> {description}</li>\n            <li><strong>Humidity:</strong> {humidity}</li>\n        </ul>\n    </div>\n);\n\nregisterBlockType('custom/weather-block', {\n    title: 'Weather Block',\n    icon: 'cloud',\n    category: 'widgets',\n    attributes: {\n        temperature: { type: 'string' },\n        description: { type: 'string' },\n        humidity: { type: 'string' },\n        location: {\n            type: 'string',\n            default: 'New York, US',\n        },\n    },\n\n    edit: ({ attributes, setAttributes }) => {\n        const [loading, setLoading] = useState(false);\n        const [error, setError] = useState(null);\n        const [filteredOptions, setFilteredOptions] = useState([]);\n        const [inputValue, setInputValue] = useState(attributes.location);\n\n        const allCities = [\n            { value: 'New York, US', label: 'New York' },\n            { value: 'Los Angeles, US', label: 'Los Angeles' },\n            { value: 'Chicago, US', label: 'Chicago' },\n            { value: 'Houston, US', label: 'Houston' },\n            { value: 'Phoenix, US', label: 'Phoenix' },\n          ];\n\n        // Update filtered options whenever inputValue changes\n        useEffect(() => {\n            if (!inputValue) {\n                setFilteredOptions(allCities);\n                return;\n            }\n            const filtered = allCities.filter((city) =>\n                city.value.toLowerCase().includes(inputValue.toLowerCase())\n            );\n            setFilteredOptions(filtered);\n            fetchWeather();\n        }, [inputValue]);\n\n\n        const fetchWeather = async () => {\n            setLoading(true);\n            setError(null);\n\n            const apiKey = weatherBlockData?.apiKey || '';\n            const city = attributes.location;\n\n            if (!apiKey) {\n                setError('API key is missing. Please check plugin settings.');\n                setLoading(false);\n                return;\n            }\n\n            try {\n                const res = await fetch(\n                    `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\n                );\n\n                if (!res.ok) {\n                    throw new Error('City not found or invalid API key.');\n                }\n\n                const data = await res.json();\n\n                setAttributes({\n                    temperature: `${data.main.temp} °C`,\n                    description: data.weather[0].description,\n                    humidity: `${data.main.humidity}%`,\n                    location: data.name,\n                });\n\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        return (\n            <Fragment>\n                <div className=\"weather-block panel\">\n                    <div className=\"combobox-container\"> {/* Relative container */}\n                        <div className=\"combobox-wrapper\">\n                            <ComboboxControl\n                                label=\"Select a city\"\n                                value={inputValue} // Bind to inputValue for control\n                                options={filteredOptions}\n                                onChange={(value) => {\n                                    setInputValue(value); // Update input value\n                                    setAttributes({ location: value }); // Update block attribute\n                                }}\n                                onFilterValueChange={(input) => {\n                                    setInputValue(input); // Update input value as user types\n                                }}\n                                placeholder=\"Start typing a city name...\"\n                            />\n                        </div>\n                    </div>\n                    <Button\n                        className=\"refresh-button\"\n                        onClick={fetchWeather}\n                        isPrimary\n                        disabled={loading}\n                        aria-busy={loading}\n                    >\n                        {loading ? 'Loading…' : 'Refresh'}\n                    </Button>\n\n                    {loading && <Spinner />}\n\n                    {error && (\n                        <Notice status=\"error\" isDismissible={false}>\n                            <p>Error: {error}</p>\n                        </Notice>\n                    )}\n\n                    {attributes.temperature && (\n                        <WeatherInfo\n                            location={attributes.location}\n                            temperature={attributes.temperature}\n                            description={attributes.description}\n                            humidity={attributes.humidity}\n                        />\n                    )}\n                </div>\n            </Fragment>\n        );\n    },\n\n    save: ({ attributes }) => {\n        return (\n            <div className=\"weather-info panel\">\n                <h4>Today's Weather in {attributes.location}</h4>\n                <ul>\n                    <li><strong>Temperature:</strong> {attributes.temperature}</li>\n                    <li><strong>Condition:</strong> {attributes.description}</li>\n                    <li><strong>Humidity:</strong> {attributes.humidity}</li>\n                </ul>\n            </div>\n        );\n    },\n});"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","Array","from","test","isArray","registerBlockType","wp","blocks","_wp$element","element","useState","useEffect","Fragment","_wp$components","components","Spinner","Button","ComboboxControl","Notice","WeatherInfo","_ref","location","temperature","description","humidity","React","createElement","className","title","icon","category","attributes","edit","_ref2","setAttributes","_useState","_useState2","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","filteredOptions","setFilteredOptions","_useState7","_useState8","inputValue","setInputValue","allCities","label","filtered","filter","city","toLowerCase","includes","fetchWeather","_ref3","_callee","_weatherBlockData","apiKey","res","data","_callee$","_context","weatherBlockData","fetch","concat","ok","json","main","temp","weather","t0","message","options","onChange","onFilterValueChange","input","placeholder","onClick","isPrimary","disabled","status","isDismissible","save","_ref4"],"sourceRoot":""}